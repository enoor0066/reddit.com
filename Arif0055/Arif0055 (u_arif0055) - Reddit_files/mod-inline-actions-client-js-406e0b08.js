import"./mod-log-takedown-preview-client-js-bd84b2cf.js";import"./comment-link-post-client-js-d31733f2.js";import"./select-controller-d006e214.js";import"./keyed-99fc4771.js";import"./custom-event-a97037f1.js";import"./faceplate-tooltip-fee9b43c.js";import{t,_ as e,n as i,g as s,v as o,c as n,a$ as a,b as r,u as d,e as l,K as c,aq as h,b5 as p,T as m,P as u,ar as b,aP as v}from"./shell-c6dfa469.js";import{s as g,x as A,K as y,I as k,y as f,l as R,b1 as S,aA as C,ap as w,f as P,b7 as O,ak as $,b6 as j,al as I,a as x,bw as M,aj as U,$ as E,bx as B,bU as D,w as T,aH as z,A as L}from"./icon-5ce37e54.js";import{c as F}from"./content-action-button-65361605.js";import{a3 as H,b4 as N}from"./age-gate-standalone-client-js-cd633927.js";import{M as V}from"./distinguished-tags-28966cf5.js";import{i as W,b as _}from"./awards-bc027552.js";import{b as q,B as Q}from"./subreddit-posting-eligibility-7aaffc88.js";import{i as J,g as K}from"./moderation-f9b118cb.js";import{H as X}from"./community-highlights-48c638e4.js";import{A as Y}from"./mod-bulk-actions-60274a61.js";import{C as G}from"./comment-fee4032b.js";import{P as Z}from"./links-168c9977.js";import{P as tt}from"./overflow-menu-actions-21bbcf5e.js";import{M as et,s as it,a as st,b as ot,c as nt,d as at,e as rt,f as dt}from"./mod-verdict-24fb3018.js";import"./shreddit-comment-share-button-c5c38660.js";import"./shreddit-post-share-button-80aa3d6a.js";import{g as lt}from"./all-chats-page-recommendations-client-js-3b956ac4.js";import{M as ct}from"./mod-actions-menu-de43957e.js";import{l as ht}from"./list-item-header-b6f6e197.js";import"./user-flair-12bd75e0.js";import"./with-share-9791add8.js";import"./promote-post-actions-controller-df3244ab.js";import"./utils-69251401.js";import"./index-7436fa38.js";import"./header-action-item-chat-client-js-c7de2bbd.js";import"./tooltip.base-bfe82f7d.js";import"./rpl-popper-f72a534b.js";import"./profile-creation-1805660b.js";import"./rpl-coachmark-4284fa96.js";import"./rpl-coachmark-card-8ea10924.js";import"./mod-actions-controller-72853af6.js";import"./mod-removal-reason-form-client-js-46df044d.js";import"./render-saved-response-template-by-subreddit-id-69204cc7.js";import"./faceplate-form-3f273b3d.js";import"./filterNullish-48b417d6.js";import"./faceplate-select-text-input-411fcca6.js";import"./constants-b1a52852.js";import"./validate-image-cdf72f61.js";import"./text-input-6aea591c.js";import"./faceplate-option-a2b2660e.js";import"./chat-mobile-xpromo-client-js-34b8f6a1.js";import"./faceplate-textarea-input-fdd1f435.js";import"./smart-escalations-provider-client-js-e7e65781.js";import"./community-onboarding-completed-modal-client-js-ab917ec7.js";import"./hui-user-drawer-client-js-b156b2df.js";import"./TinyGesture-89d9957c.js";import"./postFlair-11c4418c.js";import"./click-card-fedbccec.js";import"./faceplate-hovercard-2774446e.js";import"./previous-actions-client-js-91a7a634.js";import"./app-selector-client-js-1b454bf5.js";import"./faceplate-bottom-sheet-header-20b25f0a.js";import"./mod-dropdown-closer-71ca3a95.js";let pt=class extends g{constructor(){super(...arguments),this.buttonAppearance="secondary",this.buttonSize=o.Small,this.showFullButtons=!1,this.ariaLabel="",this.thingId="",this.smartEscalationsTracking=!1,this.isLargerThanSmallWindow=!0,this._handleModActionClick=t=>{this.dataModAction===V.AddRemovalReason&&t.stopPropagation(),this.dataModAction&&(this.dispatchEvent(n(this.dataModAction)),t.target&&this.noun&&a(t.target,r({source:"moderator",action:"click",noun:this.noun})))},this.mediaWatcher=null,this.handleMediaChange=t=>{this.isLargerThanSmallWindow=t.matches},this.renderWithTooltip=()=>A`<faceplate-tooltip appearance="inverted" position="top"> ${this.renderButton()} <slot name="text"></slot> </faceplate-tooltip>`,this.renderButton=()=>{const t=H()?F:d,e=this.smartEscalationsTracking?A` <ac-track trigger="click" san="moderator|click|remove" data-faceplate-tracking-context="${JSON.stringify({action_info:{source_name:"smart-escalations"},...this.thingId&&W(this.thingId)&&{post:{id:this.thingId}},...this.thingId&&_(this.thingId)&&{comment:{id:this.thingId}}})}"></ac-track>`:"";return A`${t({appearance:this.buttonAppearance,attributes:{onclick:this._handleModActionClick,className:"relative",slot:"trigger"},size:this.buttonSize,children:this.showFullButtons&&this.isLargerThanSmallWindow?A` <span> ${e} <slot name="text"></slot> </span> `:"",leadingIcon:this.showFullButtons&&this.isLargerThanSmallWindow?"":A` <span class="flex justify-center items-center"> ${e} <slot name="icon"></slot> </span> `,screenReaderContent:this.ariaLabel})}`}}connectedCallback(){super.connectedCallback(),this.showFullButtons&&(this.mediaWatcher=window.matchMedia("(min-width: 768px)"),this.mediaWatcher.addEventListener("change",this.handleMediaChange))}disconnectedCallback(){super.disconnectedCallback(),this.mediaWatcher?.removeEventListener("change",this.handleMediaChange)}render(){return this.showFullButtons?this.renderButton():this.renderWithTooltip()}};pt.styles=[t],e([i({type:String,attribute:"data-mod-action"})],pt.prototype,"dataModAction",void 0),e([i({type:String,attribute:"event-noun"})],pt.prototype,"noun",void 0),e([i({type:String,attribute:"button-appearance"})],pt.prototype,"buttonAppearance",void 0),e([i({type:String,attribute:"button-size"})],pt.prototype,"buttonSize",void 0),e([i({type:Boolean,attribute:"show-full-buttons"})],pt.prototype,"showFullButtons",void 0),e([i({type:String,attribute:"aria-label"})],pt.prototype,"ariaLabel",void 0),e([i({type:String,attribute:"thing-id"})],pt.prototype,"thingId",void 0),e([i({type:Boolean,attribute:"smart-escalations-tracking"})],pt.prototype,"smartEscalationsTracking",void 0),e([s()],pt.prototype,"isLargerThanSmallWindow",void 0),pt=e([l("mod-action-button")],pt);let mt=class extends(c(g)){constructor(){super(...arguments),this.feedViewType=h.ModQueueCompactView,this.viewContext=Z.CommentsPage,this.itemState=et.UNMODERATED,this.hasReports=!1,this.isModMode=!1,this.isRemoved=!1,this.isDeleted=!1,this.isLocked=!1,this.isStickied=!1,this.isHighlighted=!1,this.isCurrentUserAuthor=!1,this.hasParent=!1,this.isIconOnly=!1,this.hasRemovalReason=!1,this.permalink="",this.isDesktopViewport=!1,this.isSpamFilteredPost=!1,this.isProfilePost=!1,this.isPromotedPost=!1,this.hasFlairPermissions=!1,this.areHighlightsEnabled=!1,this.hideInlineActions=!1,this.isSmartEscalations=!1,this.isContentLevelModsCommsEnabled=!1,this.modContentDiscussionContext=void 0,this.isFeedNoApproveEnabled=!1,this.prefillChatMessageFn=N,this.moderationState=et.UNMODERATED,this._handleThingUpdate=t=>{let e="";if("awardOnContentId"in t?e=t.awardOnContentId:"commentId"in t?e=t.commentId:"postId"in t&&(e=t.postId),e!==this.thingId)return;const{value:i}=t;switch(t.action){case tt.approve:case G.approve:case Y.approve:case G.approveOptimistic:this.hasRemovalReason=!1,this.isRemoved=!1,this.moderationState=et.APPROVED;break;case tt.remove:case tt.removeAsSpam:case tt.confirmRemoval:case G.remove:case G.removeAsSpam:case G.confirmRemoval:case Y.remove:case Y.confirmRemoval:case G.removeOptimistic:case G.removeAsSpamOptimistic:case G.confirmRemovalOptimistic:this.isRemoved=!0,this.moderationState=et.REMOVED;break;case tt.addRemovalReason:case G.addRemovalReason:this.hasRemovalReason=!0;break;case tt.updateHighlightedPost:this.isHighlighted=i;break;case tt.lock:case G.lock:this.isLocked=i;break;case tt.delete:this.isDeleted=i;break;case tt.sticky:case G.sticky:this.isStickied=i;break;case tt.shareToModChat:this.modContentDiscussionContext?.modContentDiscussion||this.prefillChatMessageFn(window.location.origin+this.permalink)}}}get itemType(){return this.thingId?J(this.thingId):null}get isPost(){return this.itemType===p.Post}get isCompactView(){return this.feedViewType===h.CompactView}get isOnModqueuePage(){return this.viewContext===Z.ModQueue||this.viewContext===Z.ModQueueAll}get isApproved(){return this.moderationState===et.APPROVED}get shouldShowConfirmRemoval(){return it(this.moderationState,this.isSpamFilteredPost)}get shouldShowActionInline(){return st(this.viewContext,this.feedViewType)&&!this.isIconOnly&&!this.hideInlineActions}get isStickyable(){const t=!(this.viewContext===Z.ProfileFeed||this.viewContext===Z.ProfileFeed2),e=this.isCurrentUserAuthor&&!this.hasParent;return this.isPost?t:t&&e}get itemTopic(){switch(this.itemType){case p.Award:return m.AwardOnContentUpdated;case p.Comment:return m.CommentUpdated;case p.Post:return m.PostUpdated;default:return null}}connectedCallback(){super.connectedCallback(),this.moderationState=this.itemState,this.itemTopic&&this.subscribe(this.itemTopic,this._handleThingUpdate)}disconnectedCallback(){super.disconnectedCallback(),this.itemTopic&&this.unsubscribe(this.itemTopic,this._handleThingUpdate)}getApproveButtonAppearance(){const t=H()?"bordered":"secondary";return this.isCompactView?t:this.shouldShowConfirmRemoval||this.hasReports?"primary":(this.moderationState,et.REMOVED,t)}renderApproveAction(){return(this.isModMode||this.isOnModqueuePage)&&ot(this.moderationState)?this.isFeedNoApproveEnabled&&!this.isOnModqueuePage&&this.moderationState===et.UNMODERATED?null:A` <mod-action-button aria-label="Approve content" data-mod-action="${V.ApproveContent}" button-appearance="${this.getApproveButtonAppearance()}" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center">${y({attributes:{"aria-hidden":"true"},size:k.Small})}</span> <span slot="text">Approve</span> </mod-action-button> `:null}renderRemoveAction(){return(this.isModMode||this.isOnModqueuePage)&&nt(this.moderationState)?this.isFeedNoApproveEnabled&&!this.isOnModqueuePage&&this.moderationState===et.UNMODERATED?null:A` <mod-action-button aria-label="Remove content" data-mod-action="${V.RemoveContent}" button-appearance="${H()?"bordered":"secondary"}" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center">${f({attributes:{"aria-hidden":"true"},size:k.Small})}</span> <span slot="text"> Remove </span> </mod-action-button> `:null}renderConfirmRemovalAction(){return(this.isModMode||this.isOnModqueuePage)&&this.shouldShowConfirmRemoval?A` <mod-action-button aria-label="Confirm Removal" data-mod-action="${V.ConfirmRemoval}" button-appearance="${H()?"bordered":"secondary"}" ?show-full-buttons="${!this.isIconOnly}" thing-id="${R(this.thingId)}" ?smart-escalations-tracking="${this.isSmartEscalations}"> <span slot="icon" class="flex justify-center">${f({attributes:{"aria-hidden":"true"},size:k.Small})}</span> <span slot="text"> Confirm Removal </span> </mod-action-button> `:null}renderSpamAction(){return at({moderationState:this.moderationState,isSpamFilteredPost:this.isSpamFilteredPost,isRemoved:this.isRemoved,isPromotedPost:this.isPromotedPost})&&this.shouldShowActionInline?A` <mod-action-button aria-label="Remove content as spam" data-mod-action="${V.RemoveContentAsSpam}" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center">${S({attributes:{"aria-hidden":"true"},size:k.Small})}</span> <span slot="text"> Spam </span> </mod-action-button> `:null}renderShareToModChatAction(){if(!(rt({moderationState:this.moderationState,isSpamFilteredPost:this.isSpamFilteredPost,isRemoved:this.isRemoved,isPromotedPost:this.isPromotedPost})&&this.shouldShowActionInline)||!this.isContentLevelModsCommsEnabled||!this.modContentDiscussionContext?.modChatChannel)return null;const t=this.modContentDiscussionContext?.modContentDiscussion?this.modContentDiscussionContext.modContentDiscussion.chatChannel.permalink:lt(this.modContentDiscussionContext?.modChatChannel?.roomId);return A` <reddit-chat-anchor slot="mod-share-to-mod-chat"> <a href="${t}"> <div class="relative"> <mod-action-button aria-label="Share to mod chat" button-appearance="plain" data-mod-action="${V.ShareToModChat}"> <span slot="icon" class="flex justify-center"> ${C({attributes:{"aria-hidden":"true"},size:k.Small})} </span> <span slot="text"> Share to mod chat </span> </mod-action-button> ${this.modContentDiscussionContext?.modContentDiscussion?A`<div class="absolute -top-[4px] right-[2px] pointer-events-none"> ${q({appearance:Q.ALERT,outline:!1,content:""})} </div>`:""} </div> </a> </reddit-chat-anchor> `}renderFlairAction(){return this.isPost&&this.shouldShowActionInline?A` <mod-action-button aria-label="Open post flair modal" data-mod-action="${V.OpenEditPostFlairModal}" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center">${w({attributes:{"aria-hidden":"true"},size:k.Small})}</span> <span slot="text"> Flair </span> </mod-action-button>`:null}renderAddRemovalReasonAction(){return(this.isModMode||this.isOnModqueuePage)&&this.itemType!==p.Award&&dt(this.moderationState,this.hasRemovalReason,this.isSpamFilteredPost,this.isProfilePost)?A` <mod-action-button aria-label="Add removal reason" data-mod-action="${V.AddRemovalReason}" button-appearance="${H()?"bordered":"secondary"}" ?show-full-buttons="${!0}"> <span slot="icon" class="flex justify-center">${P({attributes:{"aria-hidden":"true"},size:k.Small})}</span> <span slot="text"> Add removal reason </span> </mod-action-button> ${this.isIconOnly?A`<div class="separator"></div>`:null} `:null}renderCopyLinkAction(){return this.shouldShowActionInline?this.isPost?A`<shreddit-post-share-button ?use-button="${!0}" ?is-desktop-viewport="${this.isDesktopViewport}" permalink="${this.permalink}" size="${o.Small}" ?show-full-buttons="${!this.isIconOnly}"></shreddit-post-share-button>`:A`<shreddit-comment-share-button slot="comment-share" ?use-button="${!0}" ?is-desktop-viewport="${this.isDesktopViewport}" permalink="${this.permalink}" ?show-full-buttons="${!this.isIconOnly}"></shreddit-comment-share-button>`:null}renderLockAction(){if(!this.shouldShowActionInline||this.isLocked)return null;const t="Lock";return A` <mod-action-button aria-label="${t}" data-mod-action="${V.Lock}" event-noun="lock" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center"> ${O({attributes:{"aria-hidden":"true"},size:k.Small})} </span> <span slot="text"> ${t} </span> </mod-action-button>`}renderUnlockAction(){if(!this.shouldShowActionInline||!this.isLocked)return null;const t="Unlock";return A` <mod-action-button aria-label="${t}" data-mod-action="${V.Unlock}" event-noun="unlock" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center"> ${$({attributes:{"aria-hidden":"true"},size:k.Small})} </span> <span slot="text"> ${t} </span> </mod-action-button>`}renderStickyAction(){if(!this.isStickyable||!this.shouldShowActionInline||this.isStickied||this.areHighlightsEnabled)return null;const t="Sticky";return A` <mod-action-button aria-label="${t}" data-mod-action="${V.Sticky}" event-noun="sticky" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center"> ${j({attributes:{"aria-hidden":"true"},size:k.Small})} </span> <span slot="text"> ${t} </span> </mod-action-button>`}renderUnstickyAction(){if(!this.isStickyable||!this.shouldShowActionInline||!this.isStickied||this.areHighlightsEnabled)return null;const t="Unsticky";return A` <mod-action-button aria-label="${t}" data-mod-action="${V.Unsticky}" event-noun="unsticky" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center"> ${I({attributes:{"aria-hidden":"true"},size:k.Small})} </span> <span slot="text"> ${t} </span> </mod-action-button>`}renderAddToHighlightsAction(){if(!this.isStickyable||!this.shouldShowActionInline||!this.areHighlightsEnabled||!X.has(this.viewContext)||this.isHighlighted)return null;const t="Add to highlights";return A` <mod-action-button aria-label="${t}" data-mod-action="${V.UpdateHighlightedPost}" event-noun="highlight" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center"> ${j({attributes:{"aria-hidden":"true"},size:k.Small})} </span> <span slot="text"> ${t} </span> </mod-action-button>`}renderRemoveFromHighlightsAction(){if(!(this.isStickyable&&this.shouldShowActionInline&&this.areHighlightsEnabled&&X.has(this.viewContext)&&this.isHighlighted))return null;const t="Remove from highlights";return A` <mod-action-button aria-label="${t}" data-mod-action="${V.RemoveHighlightedPost}" event-noun="unhighlight" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center"> ${I({attributes:{"aria-hidden":"true"},size:k.Small})} </span> <span slot="text"> ${t} </span> </mod-action-button>`}render(){return A` ${this.renderAddRemovalReasonAction()} ${this.renderApproveAction()} ${this.renderRemoveAction()} ${this.renderConfirmRemovalAction()} ${this.renderShareToModChatAction()} ${this.renderSpamAction()} ${this.renderFlairAction()} ${this.renderLockAction()} ${this.renderUnlockAction()} ${this.renderCopyLinkAction()} ${this.renderStickyAction()} ${this.renderUnstickyAction()} ${this.renderAddToHighlightsAction()} ${this.renderRemoveFromHighlightsAction()} `}};mt.styles=[t,x`:host{display:flex;gap:var(--spacer-xs)}.separator{border-left:1px solid rgb(0,0,0,.1);width:1px;height:32px}`],e([i({type:String,attribute:"thing-id"})],mt.prototype,"thingId",void 0),e([i({type:String,attribute:"feed-view-type"})],mt.prototype,"feedViewType",void 0),e([i({type:String,attribute:"view-context"})],mt.prototype,"viewContext",void 0),e([i({type:String,attribute:"item-state"})],mt.prototype,"itemState",void 0),e([i({type:Boolean,attribute:"has-reports"})],mt.prototype,"hasReports",void 0),e([i({type:Boolean,attribute:"mod-mode"})],mt.prototype,"isModMode",void 0),e([i({type:Boolean,attribute:"removed"})],mt.prototype,"isRemoved",void 0),e([i({type:Boolean,attribute:"deleted"})],mt.prototype,"isDeleted",void 0),e([i({type:Boolean,attribute:"locked"})],mt.prototype,"isLocked",void 0),e([i({type:Boolean,attribute:"stickied"})],mt.prototype,"isStickied",void 0),e([i({type:Boolean,attribute:"highlighted"})],mt.prototype,"isHighlighted",void 0),e([i({type:Boolean,attribute:"current-user-author"})],mt.prototype,"isCurrentUserAuthor",void 0),e([i({type:Boolean,attribute:"has-parent"})],mt.prototype,"hasParent",void 0),e([i({type:Boolean,attribute:"icon-only"})],mt.prototype,"isIconOnly",void 0),e([i({type:Boolean,attribute:"has-removal-reason"})],mt.prototype,"hasRemovalReason",void 0),e([i({type:String,attribute:"permalink"})],mt.prototype,"permalink",void 0),e([i({type:Boolean,attribute:"is-desktop-viewport"})],mt.prototype,"isDesktopViewport",void 0),e([i({type:Boolean,attribute:"is-spam-filtered-post"})],mt.prototype,"isSpamFilteredPost",void 0),e([i({type:Boolean,attribute:"is-profile-post"})],mt.prototype,"isProfilePost",void 0),e([i({type:Boolean,attribute:"is-promoted-post"})],mt.prototype,"isPromotedPost",void 0),e([i({type:Boolean,attribute:"has-flair-permissions"})],mt.prototype,"hasFlairPermissions",void 0),e([i({type:Boolean,attribute:"highlights-enabled"})],mt.prototype,"areHighlightsEnabled",void 0),e([i({type:Boolean,attribute:"hide-inline-actions"})],mt.prototype,"hideInlineActions",void 0),e([i({type:Boolean,attribute:"smart-escalations"})],mt.prototype,"isSmartEscalations",void 0),e([i({type:Boolean,attribute:"is-content-level-mods-comms-enabled"})],mt.prototype,"isContentLevelModsCommsEnabled",void 0),e([i({type:Object,attribute:"mod-content-discussion-context"})],mt.prototype,"modContentDiscussionContext",void 0),e([i({type:Boolean,attribute:"is-feed-no-approve-enabled"})],mt.prototype,"isFeedNoApproveEnabled",void 0),e([i({attribute:!1})],mt.prototype,"prefillChatMessageFn",void 0),e([s()],mt.prototype,"moderationState",void 0),mt=e([l("shreddit-mod-inline-actions")],mt);let ut=class extends ct{constructor(){super(...arguments),this.hasParent=!1,this.pubsub=new u(this),this.handleCommentUpdate=({commentId:t,action:e,value:i})=>{if(t===this.thingId)switch(e){case G.lock:this.isLocked=Boolean(i);break;case G.sticky:this.isStickied=Boolean(i);break;case G.distinguishAsMod:this.distinguishedAs=i?v.Moderator:void 0;break;case G.distinguishAsAdmin:this.distinguishedAs=i?v.Admin:void 0;break;case G.approve:case G.approveOptimistic:this.isRemoved=!1,this.hasRemovalReason=!1,this.verdict=b.ModApproved,this.itemState=et.APPROVED,this.hasReports=!1;break;case G.remove:case G.removeAsSpam:case G.confirmRemoval:case G.removeOptimistic:case G.removeAsSpamOptimistic:case G.confirmRemovalOptimistic:this.isRemoved=!0,this.verdict=b.ModRemoved,this.itemState=et.REMOVED,this.hasReports=!1;break;case G.addRemovalReason:this.hasRemovalReason=Boolean(i);break;case G.ignoreReports:this.isReportingIgnored=Boolean(i),i&&(this.isRemoved=!1,this.verdict=b.ModApproved,this.itemState=et.APPROVED)}}}get isStickyable(){return super.isStickyable&&this.isCurrentUserAuthor&&!this.hasParent}connectedCallback(){super.connectedCallback(),this.pubsub.subscribe(m.CommentUpdated,this.handleCommentUpdate)}disconnectedCallback(){super.disconnectedCallback(),this.pubsub.unsubscribe(m.CommentUpdated,this.handleCommentUpdate)}renderActions(){return[this.renderConfirmRemovalAction(),this.renderApproveAction(),this.renderRemoveAction(),this.isContentLevelModsCommsEnabled?this.renderShareToModChatAction(this.modContentDiscussionContext):null,this.renderSpamAction(),this.renderIgnoreReportsAction(),this.renderUnignoreReportsAction(),this.renderAddRemovalReasonAction(),this.renderDistinguishAction(),this.renderUndistinguishAction(),this.renderStickyAction("Sticky comment"),this.renderUnstickyAction("Unsticky comment"),this.renderLockAction("Lock comment"),this.renderUnlockAction("Unlock comment"),this.renderCopyLinkAction()]}};e([i({type:Boolean,attribute:"has-parent"})],ut.prototype,"hasParent",void 0),ut=e([l("shreddit-comment-mod-actions-menu")],ut);let bt=class extends ct{constructor(){super(...arguments),this.isNsfw=!1,this.isSpoiler=!1,this.pubsub=new u(this),this._handlePostUpdate=({postId:t,action:e,value:i})=>{if(t===this.thingId)switch(e){case tt.lock:this.isLocked=Boolean(i);break;case tt.sticky:this.isStickied=Boolean(i);break;case tt.updateHighlightedPost:this.isHighlighted=Boolean(i);break;case tt.distinguishAsMod:this.distinguishedAs=i?v.Moderator:void 0;break;case tt.approveOptimistic:case tt.approve:this.isRemoved=!1,this.hasRemovalReason=!1,this.verdict=b.ModApproved,this.itemState=et.APPROVED,this.hasReports=!1,this.requestUpdate();break;case tt.remove:case tt.removeAsSpam:case tt.confirmRemoval:case tt.removeOptimistic:case tt.removeAsSpamOptimistic:case tt.confirmRemovalOptimistic:this.isRemoved=!0,this.verdict=b.ModRemoved,this.itemState=et.REMOVED,this.hasReports=!1;break;case tt.addRemovalReason:this.hasRemovalReason=Boolean(i);break;case tt.markAsNsfw:this.isNsfw=Boolean(i);break;case tt.markAsSpoiler:this.isSpoiler=Boolean(i);break;case tt.ignoreReports:this.isReportingIgnored=Boolean(i),i&&(this.isRemoved=!1,this.verdict=b.ModApproved,this.itemState=et.APPROVED)}}}get isStickyable(){return super.isStickyable}connectedCallback(){super.connectedCallback(),this.pubsub.subscribe(m.PostUpdated,this._handlePostUpdate)}disconnectedCallback(){super.disconnectedCallback(),this.pubsub.unsubscribe(m.PostUpdated,this._handlePostUpdate)}renderMarkAsNsfwAction(){return this.isDeleted||this.isNsfw?null:ht({leadingIcon:M(),label:"Add NSFW tag",size:this.size,onClick:this.getListItemClickHandler(this.modActionsController.handleMarkNsfw)})}renderUnmarkAsNsfwAction(){return this.isDeleted||!this.isNsfw?null:ht({leadingIcon:U(),label:"Remove NSFW tag",size:this.size,onClick:this.getListItemClickHandler(this.modActionsController.handleUnmarkNsfw)})}renderMarkAsSpoilerAction(){return this.isDeleted||this.isSpoiler?null:ht({leadingIcon:E(),label:"Add spoiler tag",size:this.size,onClick:this.getListItemClickHandler(this.modActionsController.handleMarkSpoiler)})}renderUnmarkAsSpoilerAction(){return this.isDeleted||!this.isSpoiler?null:ht({leadingIcon:B(),label:"Remove spoiler tag",size:this.size,onClick:this.getListItemClickHandler(this.modActionsController.handleUnmarkSpoiler)})}renderAdjustCrowdControlAction(){return this.isPromotedPost?null:ht({leadingIcon:D(),label:"Adjust crowd control",size:this.size,onClick:this.getListItemClickHandler(this.modActionsController.handleAdjustCrowdControl)})}renderActions(){return[this.renderConfirmRemovalAction(),this.renderApproveAction(),this.renderRemoveAction(),this.isContentLevelModsCommsEnabled?this.renderShareToModChatAction(this.modContentDiscussionContext):null,this.renderSpamAction(),this.renderIgnoreReportsAction(),this.renderUnignoreReportsAction(),this.renderAddRemovalReasonAction(),this.renderDistinguishAction(),this.renderUndistinguishAction(),this.renderStickyAction("Sticky post"),this.renderUnstickyAction("Unsticky post"),this.renderAddToHighlightsAction(),this.renderRemoveFromHighlightsAction(),this.renderLockAction("Lock comments"),this.renderUnlockAction("Unlock comments"),this.renderEditPostFlairAction("Edit post flair"),this.renderMarkAsNsfwAction(),this.renderUnmarkAsNsfwAction(),this.renderMarkAsSpoilerAction(),this.renderUnmarkAsSpoilerAction(),this.renderAdjustCrowdControlAction(),this.renderCopyLinkAction()]}};e([i({type:Boolean,attribute:"nsfw"})],bt.prototype,"isNsfw",void 0),e([i({type:Boolean,attribute:"spoiler"})],bt.prototype,"isSpoiler",void 0),bt=e([l("shreddit-post-mod-actions-menu")],bt);const vt=c(g);let gt=class extends vt{constructor(){super(...arguments),this.isEnoughParentWidth=!1,this.removed=!1,this.thingId="",this.shouldIgnoreParentWidth=!1,this.minWidthToShowLabel=460,this.onCommentUpdateAction=t=>{if(t.commentId!==this.thingId)return;const{action:e}=t;switch(e){case G.approve:case G.approveOptimistic:this.removed=!1;break;case G.remove:case G.removeAsSpam:case G.confirmRemoval:case G.removeOptimistic:case G.removeAsSpamOptimistic:case G.confirmRemovalOptimistic:this.removed=!0}},this.onPostUpdateAction=t=>{if(t.postId!==this.thingId)return;const{action:e}=t;switch(e){case tt.approve:case tt.approveOptimistic:this.removed=!1;break;case tt.remove:case tt.removeAsSpam:case tt.confirmRemoval:case tt.removeOptimistic:case tt.removeAsSpamOptimistic:case tt.confirmRemovalOptimistic:this.removed=!0}},this.onAwardOnContentUpdateAction=t=>{if(t.awardOnContentId!==this.thingId)return;const{action:e}=t;switch(e){case Y.approve:this.removed=!1;break;case Y.remove:case Y.confirmRemoval:this.removed=!0}}}connectedCallback(){this.initializeResizeObserver(),this.subscribe(m.PostUpdated,this.onPostUpdateAction),this.subscribe(m.CommentUpdated,this.onCommentUpdateAction),this.subscribe(m.AwardOnContentUpdated,this.onAwardOnContentUpdateAction),super.connectedCallback()}disconnectedCallback(){this.resizeObserver?.disconnect(),this.unsubscribe(m.PostUpdated,this.onPostUpdateAction),this.unsubscribe(m.CommentUpdated,this.onCommentUpdateAction),this.unsubscribe(m.AwardOnContentUpdated,this.onAwardOnContentUpdateAction),super.disconnectedCallback()}initializeResizeObserver(){const t=K(this);t&&(this.resizeObserver=new ResizeObserver((t=>{for(const e of t){const t=e.contentRect.width>=this.minWidthToShowLabel;t!==this.isEnoughParentWidth&&(this.isEnoughParentWidth=t)}})),this.resizeObserver.observe(t))}render(){return A` <span class="inline-flex items-center gap-xs text-12 text-neutral-content w-full"> <div class="relative"> <slot name="verdict-indicator-avatar"></slot> <div aria-hidden="true" class="absolute bottom-0 -right-px flex justify-center items-center h-md w-md rounded-full border-solid border-md border-neutral-background scale-75 origin-bottom-right translate-y-px ${this.removed?"bg-red-200 text-red-700":"bg-kiwigreen-200 text-kiwigreen-700"}"> ${this.removed?z({size:k.ExtraSmall}):T({size:k.ExtraSmall})} </div> </div> ${this.shouldShowLabel?A`<slot name="verdict-indicator-label"></slot>`:""} </span> `}get shouldShowLabel(){return this.shouldIgnoreParentWidth||this.isEnoughParentWidth}};gt.styles=[t],e([s()],gt.prototype,"isEnoughParentWidth",void 0),e([i({type:Boolean,reflect:!0})],gt.prototype,"removed",void 0),e([i({type:String,attribute:"thing-id"})],gt.prototype,"thingId",void 0),e([i({type:Boolean,attribute:"ignore-parent-width"})],gt.prototype,"shouldIgnoreParentWidth",void 0),gt=e([l("mod-verdict-indicator-component")],gt);let At=class extends g{constructor(){super(...arguments),this.iconOnly=!1,this.pubsub=new u(this),this.handleCommentUpdate=({commentId:t,action:e,value:i})=>{if(t===this.thingId)switch(e){case G.addRemovalReason:this.hasRemovalReason=Boolean(i);break;case G.approve:case G.approveOptimistic:this.hasRemovalReason=!0,this.isRemoved=!1;break;case G.remove:case G.removeAsSpam:case G.removeOptimistic:case G.removeAsSpamOptimistic:case G.confirmRemovalOptimistic:this.hasRemovalReason=!1,this.isRemoved=!0}},this.handlePostUpdate=({postId:t,action:e,value:i})=>{if(t===this.thingId)switch(e){case tt.addRemovalReason:this.hasRemovalReason=Boolean(i);break;case tt.approve:case tt.approveOptimistic:this.hasRemovalReason=!0,this.isRemoved=!1;break;case tt.remove:case tt.removeAsSpam:case tt.removeOptimistic:case tt.removeAsSpamOptimistic:case tt.confirmRemovalOptimistic:this.isRemoved=!0,this.hasRemovalReason=!1}},this.updateModVerdict=t=>{const e=this.closest('[slot="mod-verdict"]');t&&this.isRemoved?e?.setAttribute("show-removal-reason-cta",""):e?.removeAttribute("show-removal-reason-cta")},this.shouldShowCta=()=>{const t=this.isRemoved?et.REMOVED:et.UNMODERATED;return dt(t,!!this.hasRemovalReason,!!this.isContentSpamFilteredPost,this.isProfilePost)}}connectedCallback(){super.connectedCallback();const t=K(this);this.resizeObserver=new ResizeObserver((t=>{for(const e of t)e.contentRect.width<500?this.iconOnly=!0:this.iconOnly=!1})),t&&this.resizeObserver.observe(t),this.pubsub.subscribe(m.CommentUpdated,this.handleCommentUpdate),this.pubsub.subscribe(m.PostUpdated,this.handlePostUpdate),this.updateModVerdict(!this.hasRemovalReason)}disconnectedCallback(){super.disconnectedCallback();const t=K(this);t&&this.resizeObserver.unobserve(t),this.resizeObserver.disconnect(),this.pubsub.unsubscribe(m.CommentUpdated,this.handleCommentUpdate),this.pubsub.unsubscribe(m.PostUpdated,this.handlePostUpdate)}updated(t){super.updated(t),t.has("hasRemovalReason")&&this.updateModVerdict(!this.hasRemovalReason)}render(){return this.hasRemovalReason||!this.shouldShowCta()?L:A` <mod-action-button aria-label="Add removal reason" data-mod-action="${V.AddRemovalReason}" button-appearance="secondary" ?show-full-buttons="${!0}"> <span slot="icon" class="flex justify-center"> ${P({attributes:{"aria-hidden":"true"},size:k.Small})} </span> <span slot="text" class="flex"> ${this.iconOnly?P({attributes:{"aria-hidden":"true"},size:k.Small}):"Add removal reason"} </span> </mod-action-button> `}};At.styles=[t],e([i({type:String,attribute:"thing-id"})],At.prototype,"thingId",void 0),e([i({type:Boolean,attribute:"has-removal-reason"})],At.prototype,"hasRemovalReason",void 0),e([s()],At.prototype,"iconOnly",void 0),e([i({type:Boolean,attribute:"is-removed"})],At.prototype,"isRemoved",void 0),e([i({type:Boolean,attribute:"is-content-spam-filtered-post"})],At.prototype,"isContentSpamFilteredPost",void 0),e([i({type:Boolean,attribute:"is-profile-post"})],At.prototype,"isProfilePost",void 0),At=e([l("responsive-add-removal-reason-cta")],At);

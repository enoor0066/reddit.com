import"./faceplate-tooltip-fee9b43c.js";import{K as t,T as e,t as s,_ as o,n,e as r,a as i,P as a,u as d,v as c,b as p,G as l,J as u,O as h,a5 as m,c as b}from"./shell-c6dfa469.js";import{C as g}from"./comment-fee4032b.js";import{R as z}from"./distinguished-tags-28966cf5.js";import{P as y}from"./overflow-menu-actions-21bbcf5e.js";import{o as v,x as S,a as k,s as I,ab as f,I as R,aG as U,l as C}from"./icon-5ce37e54.js";import{l as w}from"./list-item-header-b6f6e197.js";import{i as P}from"./links-168c9977.js";import"./select-controller-d006e214.js";import"./keyed-99fc4771.js";import"./mod-dropdown-closer-71ca3a95.js";import"./user-flair-12bd75e0.js";import"./age-gate-standalone-client-js-cd633927.js";let j=class extends(t(I)){constructor(){super(...arguments),this.status=z.Reported,this.handlePostUpdate=({postId:t,action:e,value:s})=>{t===this.thingId&&e===y.ignoreReports&&(this.status=s?z.Ignored:z.Dismissed)},this.handleCommentUpdate=({commentId:t,action:e,value:s})=>{t===this.thingId&&e===g.ignoreReports&&(this.status=s?z.Ignored:z.Dismissed)}}connectedCallback(){super.connectedCallback(),this.subscribe(e.PostUpdated,this.handlePostUpdate),this.subscribe(e.CommentUpdated,this.handleCommentUpdate)}disconnectedCallback(){super.disconnectedCallback(),this.unsubscribe(e.PostUpdated,this.handlePostUpdate),this.unsubscribe(e.CommentUpdated,this.handleCommentUpdate)}getStyle(){return v({"--list-icon-color":this.status===z.Reported?"var(--shreddit-color-mods-reported-onBackground)":"var(--color-secondary-onBackground)"})}render(){return this.status===z.Reported?S`<div class="bg-mods-reported-background hover:bg-mods-reported-background-hover" style="${this.getStyle()}"> <slot></slot> </div>`:S`<details class="max-w-fit bg-secondary-background hover:bg-secondary-background-hover" style="${this.getStyle()}"> <summary class="cursor-pointer block list-none" @click="${t=>t.stopPropagation()}"> <slot name="${this.status}"></slot> </summary> <slot></slot> </details>`}};j.styles=[k`summary::-webkit-details-marker{display:none}`,s],o([n({type:String,attribute:"thing-id"})],j.prototype,"thingId",void 0),o([n({type:String})],j.prototype,"status",void 0),j=o([r("reports-summary-wrapper")],j);const $=i(I);let x=class extends ${constructor(){super(...arguments),this.contentId="",this.isSnoozed=!1,this.reportReason="",this.pubsub=new a(this),this.onPostUpdateAction=t=>{if(t.postId!==this.contentId)return;const{action:e}=t;switch(e){case y.snoozeReporter:this.isSnoozed=!0;break;case y.unsnoozeReporter:this.isSnoozed=!1}},this.onCommentUpdateAction=t=>{if(t.commentId!==this.contentId)return;const{action:e}=t;switch(e){case g.snoozeReporter:this.isSnoozed=!0;break;case g.unsnoozeReporter:this.isSnoozed=!1}}}connectedCallback(){super.connectedCallback(),P(this.contentId)?this.pubsub.subscribe(e.PostUpdated,this.onPostUpdateAction):this.pubsub.subscribe(e.CommentUpdated,this.onCommentUpdateAction)}disconnectedCallback(){super.disconnectedCallback(),P(this.contentId)?this.pubsub.unsubscribe(e.PostUpdated,this.onPostUpdateAction):this.pubsub.unsubscribe(e.CommentUpdated,this.onCommentUpdateAction)}renderReportOverflowMenu(){return S` <mod-dropdown-closer> <faceplate-dropdown-menu @click="${t=>t.stopPropagation()}" position="bottom-end"> ${d({appearance:"plain",size:c.ExtraSmall,children:f({size:R.ExtraSmall})})} <faceplate-menu slot="menu"> ${w({label:this.isSnoozed?"Un-snooze reporter":"Snooze reporter",description:this.isSnoozed?"Receive reports from this user again":"Pause reports from this user for 7 days",leadingIcon:U({size:R.Small}),onClick:this.toggleSnooze})} </faceplate-menu> </faceplate-dropdown-menu> </mod-dropdown-closer> `}sendTrackingEvent(t,e,s){const o=s?"snoozereports":"unsnoozereports",n=P(t)?"post":"comment",r=P(t)?t:null,i=P(t)?null:t,a=p({source:"moderator",action:o,noun:n},{...r&&{post:{id:r}},...i&&{comment:{id:i}},...e&&{action_info:{reason:e}}});this.trackEvent(a)}showToast({success:t,isSnoozed:e}){const s=t?e?"Reports from these users will be paused":"Reports from these users will be resumed":"Failed to update reports",o=t?l.info:l.error,n=b("faceplate-alert",{level:o,message:s});this.dispatchEvent(n)}async updateReportState(t){try{const{data:e}=await u({operation:h.UpdateReportState,variables:{input:{itemId:this.contentId,reportText:this.reportReason,isSnoozed:t}}});return e?.updateReport?.ok??!1}catch(t){return!1}}async toggleSnooze(t){const s=!this.isSnoozed;this.sendTrackingEvent(this.contentId,this.reportReason,s);const o=await this.updateReportState(s);o&&(s?P(this.contentId)?this.pubsub.publish(e.PostUpdated,{postId:this.contentId,action:y.snoozeReporter,value:!0}):this.pubsub.publish(e.CommentUpdated,{commentId:this.contentId,action:g.snoozeReporter,value:!0}):P(this.contentId)?this.pubsub.publish(e.PostUpdated,{postId:this.contentId,action:y.unsnoozeReporter,value:!0}):this.pubsub.publish(e.CommentUpdated,{commentId:this.contentId,action:g.unsnoozeReporter,value:!0})),this.showToast({success:o,isSnoozed:this.isSnoozed})}render(){const t={"flex items-center m-0 p-0":!0,"bg-secondary-background":this.isSnoozed};return S`<li class="${m(t)}"> <slot name="${C(this.isSnoozed?"snoozed":void 0)}" class="flex-auto block"></slot> ${this.renderReportOverflowMenu()} </li> `}};x.styles=[s],o([n({type:String,attribute:"content-id"})],x.prototype,"contentId",void 0),o([n({type:Boolean,attribute:"is-snoozed"})],x.prototype,"isSnoozed",void 0),o([n({type:String,attribute:"report-reason"})],x.prototype,"reportReason",void 0),x=o([r("user-report-summary")],x);
